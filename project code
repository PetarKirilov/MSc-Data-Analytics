# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates


os.chdir("C:\PROJECT DATA")
colnames = ["Time", "Close"]
ar011M = pd.read_csv("ARIMA 011 M.csv", names=colnames, index_col="Time")
ar011M.index = pd.to_datetime(ar011M.index, dayfirst = True)
ar110C = pd.read_csv("ARIMA 110 C.csv", names=colnames, index_col="Time")
ar110C.index = pd.to_datetime(ar110C.index, dayfirst = True)
ar311C = pd.read_csv("ARIMA 311 C.csv", names=colnames, index_col="Time")
ar311C.index = pd.to_datetime(ar311C.index, dayfirst = True)
ar312M = pd.read_csv("ARIMA 312 M.csv", names=colnames, index_col="Time")
ar312M.index = pd.to_datetime(ar312M.index, dayfirst = True)
ar513W = pd.read_csv("ARIMA 513 W.csv", names=colnames, index_col="Time")
ar513W.index = pd.to_datetime(ar513W.index, dayfirst = True)
ar012W = pd.read_csv("ARIMA 012 W.csv", names=colnames, index_col="Time")
ar012W.index = pd.to_datetime(ar012W.index, dayfirst = True)
mean55 = pd.read_csv("mean 55.csv", names=colnames, index_col="Time")
mean55.index = pd.to_datetime(mean55.index, dayfirst = True)
close55 = pd.read_csv("close 55.csv", names=colnames, index_col="Time")
close55.index = pd.to_datetime(close55.index, dayfirst = True)
last55 = pd.read_csv("last55.csv", names=colnames, index_col="Time")
last55.index = pd.to_datetime(last55.index, dayfirst = True)
baseC = pd.read_csv("baseline C.csv", names=colnames, index_col="Time")
baseC.index = pd.to_datetime(baseC.index, dayfirst = True)
baseM = pd.read_csv("baseline M.csv", names=colnames, index_col="Time")
baseM.index = pd.to_datetime(baseM.index, dayfirst = True)
baseW = pd.read_csv("baseline W.csv", names=colnames, index_col="Time")
baseW.index = pd.to_datetime(baseW.index, dayfirst = True)
lstm11C = pd.read_csv("LSTM 1-1 C.csv", names=colnames, index_col="Time")
lstm11C.index = pd.to_datetime(lstm11C.index, dayfirst = True)
lstm1200C = pd.read_csv("LSTM 1-200 C.csv", names=colnames, index_col="Time")
lstm1200C.index = pd.to_datetime(lstm1200C.index, dayfirst = True)
lstm2200C = pd.read_csv("LSTM 2-200 C.csv", names=colnames, index_col="Time")
lstm2200C.index = pd.to_datetime(lstm2200C.index, dayfirst = True)
lstm11M = pd.read_csv("LSTM 1-1 M.csv", names=colnames, index_col="Time")
lstm11M.index = pd.to_datetime(lstm11M.index, dayfirst = True)
lstm1200M = pd.read_csv("LSTM 1-200 M.csv", names=colnames, index_col="Time")
lstm1200M.index = pd.to_datetime(lstm1200M.index, dayfirst = True)
lstm2200M = pd.read_csv("LSTM 2-200 M.csv", names=colnames, index_col="Time")
lstm2200M.index = pd.to_datetime(lstm2200M.index, dayfirst = True)
lstm11W = pd.read_csv("LSTM 1-1 W.csv", names=colnames, index_col="Time")
lstm11W.index = pd.to_datetime(lstm11W.index, dayfirst = True)
lstm1200W = pd.read_csv("LSTM 1-200 W.csv", names=colnames, index_col="Time")
lstm1200W.index = pd.to_datetime(lstm1200W.index, dayfirst = True)
lstm2200W = pd.read_csv("LSTM 2-200 W.csv", names=colnames, index_col="Time")
lstm2200W.index = pd.to_datetime(lstm2200W.index, dayfirst = True)
lstm22000W = pd.read_csv("LSTM 2-2000 W.csv", names=colnames, index_col="Time")
lstm22000W.index = pd.to_datetime(lstm22000W.index, dayfirst = True)
lstm4200W = pd.read_csv("LSTM 4-200 W.csv", names=colnames, index_col="Time")
lstm4200W.index = pd.to_datetime(lstm4200W.index, dayfirst = True)
proW = pd.read_csv("prophet W.csv", names=colnames, index_col="Time")
proW.index = pd.to_datetime(proW.index, dayfirst = True)
proWt = pd.read_csv("prophet W tuned.csv", names=colnames, index_col="Time")
proWt.index = pd.to_datetime(proWt.index, dayfirst = True)
proC = pd.read_csv("prophet C.csv", names=colnames, index_col="Time")
proC.index = pd.to_datetime(proC.index, dayfirst = True)
proCt = pd.read_csv("prophet C tuned.csv", names=colnames, index_col="Time")
proCt.index = pd.to_datetime(proCt.index, dayfirst = True)
proM = pd.read_csv("prophet M.csv", names=colnames, index_col="Time")
proM.index = pd.to_datetime(proM.index, dayfirst = True)
proMt = pd.read_csv("prophet M tuned.csv", names=colnames, index_col="Time")
proMt.index = pd.to_datetime(proMt.index, dayfirst = True)

plt.style.use("ggplot")

plt.figure(figsize=(15,8))
plt.title("Mean Close Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(mean55["Close"][-40:], label = "Observed", color="black", linewidth=3.0)
plt.plot(baseM["Close"], label = "Baseline", color="plum")
plt.plot(ar011M["Close"], label = "ARIMA (0,1,1)", color="orangered")
plt.plot(ar312M["Close"], label = "ARIMA (3,1,2)", color="red")
plt.plot(proM["Close"], label = "Prophet", color="cyan")
plt.plot(proMt["Close"], label = "Prophet Tuned", color="blue")
plt.plot(lstm11M["Close"], label = "LSTM 1/1", color="green")
plt.plot(lstm1200M["Close"], label = "LSTM 1/200", color="olive")
plt.plot(lstm2200M["Close"], label = "LSTM 2/200", color="chartreuse")
plt.legend(fontsize=13)
plt.show()

################################################################

plt.figure(figsize=(15,8))
plt.title("Last Close Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(close55["Close"][-40:], label = "Observed", color="black", linewidth=3.0)
plt.plot(baseC["Close"], label = "Baseline", color="plum")
plt.plot(ar110C["Close"], label = "ARIMA (1,1,0)", color="orangered")
plt.plot(ar311C["Close"], label = "ARIMA (3,1,1)", color="red")
plt.plot(proC["Close"], label = "Prophet", color="cyan")
plt.plot(proCt["Close"], label = "Prophet Tuned", color="blue")
plt.plot(lstm11C["Close"], label = "LSTM 1/1", color="green")
plt.plot(lstm1200C["Close"], label = "LSTM 1/200", color="olive")
plt.plot(lstm2200C["Close"], label = "LSTM 2/200", color="chartreuse")
plt.legend(fontsize=13)
plt.show()


##########################################################
fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="black", linewidth=3.0)
ax.plot(baseW["Close"], label = "Baseline", color="plum")
ax.plot(ar513W["Close"], label = "ARIMA (5,1,3)", color="orangered")
ax.plot(ar012W["Close"], label = "ARIMA (0,1,2)", color="red")
ax.plot(proW["Close"], label = "Prophet", color="cyan")
ax.plot(proWt["Close"], label = "Prophet Tuned", color="blue")
ax.plot(lstm11W["Close"], label = "LSTM 1/1", color="green")
ax.plot(lstm1200W["Close"], label = "LSTM 1/200", color="olive")
ax.plot(lstm2200W["Close"], label = "LSTM 2/200", color="chartreuse")
ax.plot(lstm22000W["Close"], label = "LSTM 2/2000", color="sienna")
ax.plot(lstm4200W["Close"], label = "LSTM 4/200", color="violet")
ax.legend(loc="upper left", fontsize=13)

plt.figure(figsize=(15,8))
plt.title("Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="black", linewidth=3.0)
plt.plot(baseW["Close"], label = "Baseline", color="plum")
plt.plot(ar513W["Close"], label = "ARIMA (5,1,3)", color="orangered")
plt.plot(ar012W["Close"], label = "ARIMA (0,1,2)", color="red")
plt.plot(proW["Close"], label = "Prophet", color="cyan")
plt.plot(proWt["Close"], label = "Prophet Tuned", color="blue")
plt.plot(lstm11W["Close"], label = "LSTM 1/1", color="green")
plt.plot(lstm1200W["Close"], label = "LSTM 1/200", color="olive")
plt.plot(lstm2200W["Close"], label = "LSTM 2/200", color="chartreuse")
plt.plot(lstm22000W["Close"], label = "LSTM 2/2000", color="sienna")
plt.plot(lstm4200W["Close"], label = "LSTM 4/200", color="violet")
plt.legend(fontsize=15, loc = "upper left")
plt.show()

fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Baseline Predictions", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(baseW["Close"], label = "Predicted", color="green")
ax.legend(loc="lower right", fontsize=15)


plt.figure(figsize=(15,8))
plt.title("Crack Spread Baseline Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="red")
plt.plot(baseW["Close"], label = "Predicted", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

plt.figure(figsize=(15,8))
plt.title("Mean Close Crack Spread Baseline Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(mean55["Close"][-40:], label = "Observed", color="red")
plt.plot(baseM["Close"], label = "Predicted", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

plt.figure(figsize=(15,8))
plt.title("Last Close Crack Spread Baseline Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(close55["Close"][-40:], label = "Observed", color="red")
plt.plot(baseC["Close"], label = "Predicted", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(ar513W["Close"], label = "ARIMA (5,1,3)", color="green")
ax.legend(loc="upper right", fontsize=15)


plt.figure(figsize=(15,8))
plt.title("Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="red")
plt.plot(ar513W["Close"], label = "ARIMA (5,1,3)", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(ar012W["Close"], label = "ARIMA (0,1,2)", color="green")
ax.legend(loc="upper right", fontsize=15)


plt.figure(figsize=(15,8))
plt.title("Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="red")
plt.plot(ar012W["Close"], label = "ARIMA (0,1,2)", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(mean55["Close"][-40:], label = "Observed", color="red")
plt.plot(ar312M["Close"], label = "ARIMA (3,1,2)", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(mean55["Close"][-40:], label = "Observed", color="red")
plt.plot(ar011M["Close"], label = "ARIMA (0,1,1)", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(close55["Close"][-40:], label = "Observed", color="red")
plt.plot(ar311C["Close"], label = "ARIMA (3,1,1)", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Crack Spread Predictions", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(close55["Close"][-40:], label = "Observed", color="red")
plt.plot(ar110C["Close"], label = "ARIMA (1,1,0)", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions with LSTM RNN 2/200", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(lstm2200W["Close"], label = "LSTM 2/200", color="green")
ax.legend(loc="upper right", fontsize=15)


plt.figure(figsize=(15,8))
plt.title("Crack Spread Prediction with LSTM RNN 2/200", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm2200W["Close"], label = "LSTM 2/200", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions with LSTM RNN 1/200", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(lstm1200W["Close"], label = "LSTM 1/200", color="green")
ax.legend(loc="upper right", fontsize=15)


plt.figure(figsize=(15,8))
plt.title("Crack Spread Prediction with LSTM RNN 1/200", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm1200W["Close"], label = "LSTM 1/200", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions with LSTM RNN 2/2000", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(lstm22000W["Close"], label = "LSTM 2/2000", color="green")
ax.legend(loc="upper right", fontsize=15)


plt.figure(figsize=(15,8))
plt.title("Crack Spread Prediction with LSTM RNN 2/2000", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm22000W["Close"], label = "LSTM 2/2000", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions with LSTM RNN 4/200", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(lstm4200W["Close"], label = "LSTM 4/200", color="green")
ax.legend(loc="upper right", fontsize=15)

fig, ax=plt.subplots(figsize=(15,8))
fig.autofmt_xdate()
xfmt = mdates.DateFormatter('%d-%m-%y %H:%M')
ax.xaxis.set_major_formatter(xfmt)
ax.set_title("Crack Spread Predictions with LSTM RNN 1/1", fontsize=20)
ax.set_ylabel("USD", fontsize = 20)
ax.set_xlabel("Date", fontsize = 20)
ax.plot(last55["Close"][-40:], label = "Observed", color="red")
ax.plot(lstm11W["Close"], label = "LSTM 1/1", color="green")
ax.legend(loc="upper right", fontsize=15)


plt.figure(figsize=(15,8))
plt.title("Crack Spread Prediction with LSTM RNN 1/1", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(last55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm11W["Close"], label = "LSTM 1/1", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Mean Close Crack Spread Prediction with LSTM RNN 2/200", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(mean55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm2200M["Close"], label = "LSTM 2/200", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Mean Close Crack Spread Prediction with LSTM RNN 1/200", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(mean55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm1200M["Close"], label = "LSTM 1/200", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

plt.figure(figsize=(15,8))
plt.title("Mean Close Crack Spread Prediction with LSTM RNN 1/1", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(mean55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm11M["Close"], label = "LSTM 1/1", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Last Close Crack Spread Prediction with LSTM RNN 2/200", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(close55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm2200C["Close"], label = "LSTM 2/200", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Last Close Crack Spread Prediction with LSTM RNN 1/200", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(close55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm1200C["Close"], label = "LSTM 1/200", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()


plt.figure(figsize=(15,8))
plt.title("Last Close Crack Spread Prediction with LSTM RNN 1/1", fontsize=20)
plt.xlabel("Date", fontsize = 20)
plt.ylabel("USD", fontsize = 20)
plt.plot(close55["Close"][-40:], label = "Observed", color="red")
plt.plot(lstm11C["Close"], label = "LSTM 1/1", color="green")
plt.legend(fontsize=15, loc = "upper right")
plt.show()

plt.plot(close55["Close"][-45:], label = "Observed", color="black", linewidth=3.0)
plt.plot(baseC["Close"], label = "Baseline", color="plum")
plt.plot(ar110C["Close"], label = "ARIMA (1,1,0)", color="orangered")
plt.plot(ar311C["Close"], label = "ARIMA (3,1,1)", color="red")
plt.plot(proC["Close"], label = "Prophet", color="cyan")
plt.plot(proCt["Close"], label = "Prophet Tuned", color="blue")
plt.plot(lstm11C["Close"], label = "LSTM 1/1", color="green")
plt.plot(lstm1200C["Close"], label = "LSTM 1/200", color="olive")
plt.plot(lstm2200C["Close"], label = "LSTM 2/200", color="chartreuse")

